#include <graphics.h>
#include <stdlib.h>
#include <stdio.h>
#include <conio.h>
#include<math.h>
int crntclr=0,msclkx,msclky,brshradius=5,brshpttrn=0,brshfill=1,drawcirclemode=0,drawcirclesize=2,drawrectanglesize=2;



void drawtriangle()
{
    setcolor(crntclr);
    int i,cx,cy,bx,by,ax,ay;
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, cx, cy);
        if((cx>150)&&(cx<950)&&(cy>10)&&(cy<550))
            break;
    }
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, bx, by);
        if((bx>150)&&(bx<950)&&(by>10)&&(by<550))
            break;
    }
    line(cx,cy,bx,by);
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, ax, ay);
        if((ax>150)&&(ax<950)&&(ay>10)&&(ay<550))
            break;
    }

    line(cx,cy,ax,ay);
    line(bx,by,ax,ay);
}



void drawline()
{
    setcolor(crntclr);
    int i,cx=-1,cy=-1,bx,by;
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, cx, cy);
        if((cx>150)&&(cx<950)&&(cy>10)&&(cy<550))
            break;
    }
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, bx, by);
        if((bx>150)&&(bx<950)&&(by>10)&&(by<550))
            break;
    }

        line(cx,cy,bx,by);

}


void drawrectangle()
{
    setcolor(crntclr);
    int i,cx=-1,cy=-1,bx,by;
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, cx, cy);
        if((cx>150)&&(cx<950)&&(cy>10)&&(cy<550))
            break;
    }
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, bx, by);
        if((bx>150)&&(bx<950)&&(by>10)&&(by<550))
            break;
    }
    for(i=0;i<drawrectanglesize;i++)
    {
        rectangle(cx,cy,bx,by);
        cx++;
        cy++;
        bx--;
        by--;
    }
}







void drawcircle()
{
    int i,r,cx=-1,cy=-1,bx,by;
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, cx, cy);
        if((cx>150)&&(cx<950)&&(cy>10)&&(cy<550))
            break;
    }
    while(1)
    {
        getmouseclick(WM_LBUTTONDOWN, bx, by);
        if((bx>150)&&(bx<950)&&(by>10)&&(by<550))
            break;
    }

    r=sqrt((cx-bx)*(cx-bx)+(cy-by)*(cy-by));
    setcolor(crntclr);
    if(drawcirclemode==0)
    for(i=0;i<drawcirclesize;i++)
    {
        circle(cx,cy,r);
        r--;
    }
    else
        for(i=0;i<drawcirclesize;i++)
    {circle((cx+bx)/2,(cy+by)/2,r/2);
    r--;}
}

void circlebrush()
{
    while (1)
    {
        msclkx=mousex();
        msclky=mousey();
        if((msclkx>150)&&(msclkx<950)&&(msclky>10)&&(msclky<550))
        {
            if(crntclr!=15)
            {
                setcolor(15);
                circle(msclkx,msclky,brshradius);
                setfillstyle(brshfill, 15);
                floodfill(msclkx, msclky, 15);
                setcolor(crntclr);
                circle(msclkx,msclky,brshradius);
                setfillstyle(brshfill, crntclr);
                floodfill(msclkx, msclky, crntclr);
            }
            else
            {
                setcolor(0);
                circle(msclkx,msclky,brshradius);
                setfillstyle(brshfill, 0);
                floodfill(msclkx, msclky, 0);
                setcolor(crntclr);
                circle(msclkx,msclky,brshradius);
                setfillstyle(brshfill, crntclr);
                floodfill(msclkx, msclky, crntclr);
            }
        }
        getmouseclick(WM_LBUTTONDOWN, msclkx, msclky);
        if((msclkx>0)&&(msclky>0))
            return;

    }

}








void rectbrush()
{
    while (1)
    {
        msclkx=mousex();
        msclky=mousey();
        if((msclkx>150)&&(msclkx<950)&&(msclky>10)&&(msclky<550))
        {
            if(crntclr!=15)
            {
                setcolor(15);
                rectangle(msclkx-brshradius,msclky-brshradius,msclkx+brshradius,msclky+brshradius);
                setfillstyle(brshfill, 15);
                floodfill(msclkx, msclky, 15);
                setcolor(crntclr);
                rectangle(msclkx-brshradius,msclky-brshradius,msclkx+brshradius,msclky+brshradius);
                setfillstyle(brshfill, crntclr);
                floodfill(msclkx, msclky, crntclr);
            }
            else
            {
                setcolor(0);
                rectangle(msclkx-brshradius,msclky-brshradius,msclkx+brshradius,msclky+brshradius);
                setfillstyle(brshfill, 0);
                floodfill(msclkx, msclky, 0);
                setcolor(crntclr);
                rectangle(msclkx-brshradius,msclky-brshradius,msclkx+brshradius,msclky+brshradius);
                setfillstyle(brshfill, crntclr);
                floodfill(msclkx, msclky, crntclr);
            }
        }
        getmouseclick(WM_LBUTTONDOWN, msclkx, msclky);
        if((msclkx>0)&&(msclky>0))
            return;

    }

}





int main(void)

{

    /* request autodetection */

    int gdriver = DETECT, gmode, errorcode;




    initwindow(1000, 700);
    setfillstyle(1, 7);
    floodfill(21, 21, 7);

    //setiing color box start

    int paltop=10,palbtm=30,palc=0;
    while(palc<8)
    {
        setcolor(0);
        rectangle(9, paltop-1, 31, palbtm+1);
        setcolor(palc);
        rectangle(10, paltop, 30, palbtm);
        setfillstyle(1, palc);
        floodfill(21, palbtm-1, palc);
        paltop+=25;
        palbtm+=25;
        palc++;
    }
    paltop=10;
    palbtm=30;
    while(palc<16)
    {
        setcolor(0);
        rectangle(9+30, paltop-1, 31+30, palbtm+1);
        setcolor(palc);
        rectangle(10+30, paltop, 30+30, palbtm);
        setfillstyle(1, palc);
        floodfill(21+30, palbtm-1, palc);
        paltop+=25;
        palbtm+=25;
        palc++;
    }
    //brush set start
    setcolor(0);
    rectangle(70,10,126,155);
    rectangle(70,10,126,30);
    setfillstyle(1, 0);
    floodfill(71, 11, 0);


    //setiing color box end


    moveto(75, 10);
    setcolor(15);
    outtext(" Brush ");
    //brush resize start
    moveto(78+5, 37);
    setcolor(15);
    outtext("Size");

    setcolor(0);
    rectangle(9+60+5, 55, 31+60+5, 75);
    setfillstyle(1, 0);
    floodfill(70+5, 56, 0);
    moveto(69+3+5, 55+3);
    setcolor(7);
    outtext(" + ");

    setcolor(0);
    rectangle(9+60+25+5, 55, 31+60+25+5, 75);
    setfillstyle(1, 0);
    floodfill(70+25+5, 56, 0);
    moveto(69+3+25+5, 55+3);
    setcolor(7);
    outtext(" -- ");
    //brush resize end

    //brush pattern start

    moveto(75, 87);
    setcolor(15);
    outtext("Pattern");

    setcolor(0);
    rectangle(74, 105, 96, 125);
    setfillstyle(1, 0);
    floodfill(75, 106, 0);
    setcolor(15);
    circle(85,115,7);
    setfillstyle(1, 15);
    floodfill(86, 116, 15);

    setcolor(0);
    rectangle(99, 105, 121, 125);
    setfillstyle(1, 0);
    floodfill(100, 106, 0);
    setcolor(15);
    rectangle(104, 110, 116, 120);
    setfillstyle(1, 15);
    floodfill(105, 111, 15);
    //brush pattern end


    //brush fill pattern start


    setcolor(0);
    rectangle(74, 130, 96, 150);
    setfillstyle(1, 10);
    floodfill(75, 131, 0);




    setcolor(0);
    rectangle(99, 130, 121, 150);
    setfillstyle(10, 10);
    floodfill(100, 131, 0);

    //brush fill pattern end

    //brush set end

    //text command start
    setcolor(0);
    rectangle(74, 160, 121, 180);
    setfillstyle(1, 0);
    floodfill(75, 161, 0);
    moveto(82,162);
    setcolor(15);
    outtext("Text");

    //text command end




    //circle set start
    setcolor(0);
    rectangle(7, 230, 58, 303);
    rectangle(7, 230, 58, 250);
    setfillstyle(1, 0);
    floodfill(13, 231, 0);
    moveto(14,233);
    setcolor(15);
    outtext("Circle");

    setcolor(0);
    rectangle(10, 255, 30, 275);
    setfillstyle(1, 0);
    floodfill(11, 256, 0);
    setcolor(15);
    circle(20,265,7);
    setfillstyle(1, 15);
    floodfill(21, 266, 15);
    setcolor(0);
    line(20,265,27,265);

    setcolor(0);
    rectangle(35, 255, 55, 275);
    setfillstyle(1, 0);
    floodfill(36, 256, 0);
    setcolor(15);
    circle(45,265,7);
    setfillstyle(1, 15);
    floodfill(46, 266, 15);
    setcolor(0);
    line(38,265,52,265);



    setcolor(0);
    rectangle(10, 280, 30, 300);
    setfillstyle(1, 0);
    floodfill(11, 281, 0);
    moveto(12, 282);
    setcolor(7);
    outtext(" + ");

    setcolor(0);
    rectangle(35, 280,55, 300);
    setfillstyle(1, 0);
    floodfill(36, 281, 0);
    moveto(37, 282);
    setcolor(7);
    outtext(" -- ");



    //circle set end
    //rectangle set start


    setcolor(0);
    rectangle(62, 230, 132, 280);

    setcolor(0);
    rectangle(62, 230, 132, 250);
    setfillstyle(1, 0);
    floodfill(63, 231, 0);
    moveto(66,233);
    setcolor(15);
    outtext("Rectangle");


    setcolor(0);
    rectangle(70, 255, 90, 275);
    setfillstyle(1, 0);
    floodfill(71, 256, 0);
    moveto(73, 257 );
    setcolor(15);
    outtext(" + ");

    setcolor(0);
    rectangle(95, 255, 115, 275);
    setfillstyle(1, 0);
    floodfill(96, 256, 0);
    moveto(97, 257);
    setcolor(15);
    outtext(" -- ");



    //rectangle set end


    //Triangle set start

    setcolor(0);
    rectangle(62, 283, 132, 303);
    setfillstyle(1, 0);
    floodfill(63, 284, 0);
    moveto(70, 285);
    setcolor(15);
    moveto(70, 285);
    setcolor(15);
    outtext("Triangle");

    //triangle set end


    //line set start

    setcolor(0);
    rectangle(7, 310, 132, 330);
    setfillstyle(1, 0);
    floodfill(8, 311, 0);
    moveto(55,312);
    setcolor(15);
    outtext("Line");


    //line set end



    // set image area start

    setcolor(0);
    rectangle(150, 10, 950, 550);
    setfillstyle(1, 15);
    floodfill(151, 549, 0);
    setcolor(0);
    // set image area end
    while(1)
    {

        setcolor(0);
        rectangle(150, 10, 950, 550);


        getmouseclick(WM_LBUTTONDOWN, msclkx, msclky);
        if((msclkx>10)&&(msclkx<30)&&(msclky>10)&&(msclky<30))
        {
            setcolor(0);
            crntclr=0;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>35)&&(msclky<55))
        {
            setcolor(1);
            crntclr=1;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>60)&&(msclky<80))
        {
            setcolor(2);
            crntclr=2;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>85)&&(msclky<105))
        {
            setcolor(3);
            crntclr=3;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>110)&&(msclky<130))
        {
            setcolor(4);
            crntclr=4;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>135)&&(msclky<155))
        {
            setcolor(5);
            crntclr=5;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>160)&&(msclky<180))
        {
            setcolor(6);
            crntclr=6;
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>185)&&(msclky<205))
        {
            setcolor(7);
            crntclr=7;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>10)&&(msclky<30))
        {
            setcolor(8);
            crntclr=8;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>35)&&(msclky<55))
        {
            setcolor(9);
            crntclr=9;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>60)&&(msclky<80))
        {
            setcolor(10);
            crntclr=10;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>85)&&(msclky<105))
        {
            setcolor(11);
            crntclr=11;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>110)&&(msclky<130))
        {
            setcolor(12);
            crntclr=12;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>135)&&(msclky<155))
        {
            setcolor(13);
            crntclr=13;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>160)&&(msclky<180))
        {
            setcolor(14);
            crntclr=14;
        }
        else if((msclkx>40)&&(msclkx<60)&&(msclky>185)&&(msclky<205))
        {
            setcolor(15);
            crntclr=15;
        }


        else if((msclkx>70+5)&&(msclkx<90+5)&&(msclky>55)&&(msclky<75))
        {

            brshradius+=1;
        }
        else if((msclkx>70+25+5)&&(msclkx<90+25+5)&&(msclky>55)&&(msclky<75))
        {
            if(brshradius>1)

            brshradius-=1;
        }
        else if((msclkx>74)&&(msclkx<96)&&(msclky>105)&&(msclky<125))
        {
            brshpttrn=0;
        }
        else if((msclkx>99)&&(msclkx<121)&&(msclky>105)&&(msclky<125))
        {
            brshpttrn=1;
        }
        else if((msclkx>74)&&(msclkx<96)&&(msclky>130)&&(msclky<150))
        {
            brshfill=1;
        }
        else if((msclkx>99)&&(msclkx<121)&&(msclky>130)&&(msclky<150))
        {
            brshfill=10;
        }
        else if((msclkx>74)&&(msclkx<121)&&(msclky>160)&&(msclky<180))
        {

        }

        else if((msclkx>7)&&(msclkx<50)&&(msclky>58)&&(msclky<250))
        {
           drawcircle();
        }
        else if((msclkx>10)&&(msclkx<30)&&(msclky>255)&&(msclky<275))
        {
           drawcirclemode=0;
           drawcircle();
        }
        else if((msclkx>35)&&(msclkx<55)&&(msclky>255)&&(msclky<275))
        {
           drawcirclemode=1;
           drawcircle();
        }


        else if((msclkx>10)&&(msclkx<30)&&(msclky>280)&&(msclky<300))
        {
            drawcirclesize+=2;
        }
        else if((msclkx>35)&&(msclkx<55)&&(msclky>280)&&(msclky<300))
        {
            if(drawcirclesize>2)
            drawcirclesize-=2;
        }
        else if((msclkx>62)&&(msclkx<132)&&(msclky>230)&&(msclky<250))
        {
            drawrectangle();
        }
        else if((msclkx>70)&&(msclkx<90)&&(msclky>255)&&(msclky<275))
        {
            drawrectanglesize+=2;
        }
        else if((msclkx>95)&&(msclkx<115)&&(msclky>255)&&(msclky<275))
        {
            if(drawrectanglesize>2)
            drawrectanglesize-=2;
        }
        else if((msclkx>62)&&(msclkx<132)&&(msclky>283)&&(msclky<303))
        {
            drawtriangle();
        }
        else if((msclkx>7)&&(msclkx<310)&&(msclky>283)&&(msclky<330))
        {
            drawline();
        }



        else if((msclkx>150)&&(msclkx<950)&&(msclky>10)&&(msclky<550))
        {
            if(brshpttrn==0)
                circlebrush();
            else if(brshpttrn==1)
                rectbrush();
        }
    }


    getch();

    return 0;

}
